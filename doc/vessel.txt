 *vessel*

                                   vessel

==============================================================================
CONTENTS                                                      *vessel-contents*

    1. Overview .................................... |vessel-overview|
    2. API ......................................... |vessel-api|
    3. Default Popup Mappings ...................... |vessel-default-mappings|
    3. Configuration ............................... |vessel-configuration|
    6. Credits ..................................... |vessel-credits|
    7. License ..................................... |vessel-license|


==============================================================================
1. Overview                                                    *vessel-overview*

Interactive mark and jump lists floating window.

Simple interactive wrapper around :marks and :jumps commands that does not try
to re-imagine native Vim functionality.

Also provides useful shortcuts for setting marks automatically without having
to pick a letter by yourself.

==============================================================================
2. API                                       *vessel-plug-mappings*   *vessel-api*

-----------------------------------------------------------------------------
Mark list api

Show all global (uppercase) and local marks (lowercase) grouped by file.
>
    <plug>(VesselViewMarks)
    require("vessel").view_marks(opts, filter_func)
<

Show only local (lowercase) marks.
>
    <plug>(VesselViewLocalMarks)
    require("vessel").view_local_marks(opts)
<

Show only global (uppercase) marks.
>
    <plug>(VesselViewGlobalMarks)
    require("vessel").view_global_marks(opts)
<

Show both local and global marks in the current file.
>
    <plug>(VesselViewBufferMarks)
    require("vessel").view_buffer_marks(opts)
<

Show only global marks belonging to other files.
>
    <plug>(VesselViewExternalMarks)
    require("vessel").view_external_marks(opts)
<
Automatically set/unset a local mark on the current line.
>
    <plug>(VesselSetLocalMark)
    require("vessel").set_local_mark(opts)
<

Automatically set/unset a global mark on the current line.
>
    <plug>(VesselSetGlobalMark)
    require("vessel").set_global_mark(opts)
<

-----------------------------------------------------------------------------
Jump list api

Show the whole jump list
>
    <plug>(VesselViewJumps)
    require("vessel").view_jumps(opts, filter_func)
<

Show only jumps inside the current file
>
    <plug>(VesselViewLocalJumps)
    require("vessel").view_local_jumps(opts)
<

Show only jumps outside the current file
>
    <plug>(VesselViewExternalJumps)
    require("vessel").view_external_jumps(opts)
<

==============================================================================
3. Default Popup Mappings                                *vessel-popup-mappings*

------------------------------------------------------------------------------
Mark list mapppings

Defaul mappings for the mark list window.
They can be changed with the "marks.mappings" option.

q, <ESC>        Close the floating window

<C-J>           Move to the next mark group (path header)

<C-K>           Move to the previous mark group (path header)

d               Delete the mark on the current line

l, <CR>         Jump to the mark (or path) under cursor

o               Jump to the mark under cursor
                (does not change the jump list)

v               Open the mark under cursor in a vertical split

V               Open the mark under cursor in a vertical split with
                (does not change the jump list)

s               Open the mark under cursor in a horizontal split

S               Open the mark under cursor in a horizontal split
                (does not change the jump list)

t               Open the mark under cursor in a new tab

T               Open the mark under cursor in a new tab
                (does not change the jump list)

<SPACE>         Cycle sorting type.
                Sort marks by line number or alphabetically

m{a-zA-Z}       Change the mark under cursor

'{a-z-A-Z}      Jump directly to a mark

------------------------------------------------------------------------------
Jump list mappings

Defaul mappings for the jump list window.
They be changed with the "jumps.mappings" option.

l, <CR>         Jump to the line under cursor.

q, <ESC>        Close the floating window.

C               Clear the entire jump list.

<C-O>           Move backwards in the jump list (towards the bottom). As a count,
                you can use the relative number displayed on the left column.

<C-I>           Move forward in the jump list (towards the top). As a count, you
                can use the relative number displayed on the left column.

==============================================================================
4. Configuration                                          *vessel-configuration*

Vessel has extensive configuration options. Head over to

https://github.com/gcmt/vessel.nvim#Configuration


==============================================================================
6. Credits                                                      *vessel-credits*

Author: Giacomo Comitti
Contributors: https://github.com/gcmt/vessel.nvim/contributors
Git repository: https://github.com/gcmt/vessel.nvim


==============================================================================
7. License                                                      *vessel-license*

MIT License

Copyright (c) 2024 Giacomo Comitti

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

vim:tw=78:sw=4:ts=8:ft=help:norl:noet:
